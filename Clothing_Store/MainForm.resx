<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pboxTshirt.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAoHBwkHBgoJCAkLCwoMDxkQDw4ODx4WFxIZJCAmJSMgIyIo
        LTkwKCo2KyIjMkQyNjs9QEBAJjBGS0U+Sjk/QD3/2wBDAQsLCw8NDx0QEB09KSMpPT09PT09PT09PT09
        PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT3/wAARCAC0AKIDASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD2SiiigAooooAKKK5m58Yrd3T2Phm1Or3aHbJKjbbWA8ffl5BP
        Odq5PB6UAdDc3MFnbvcXU0cEEYy8kjhVUepJ4Fcc/jm/1TVLOHw1pSXNlO0gW8vJDAk+xdzCMYLY5A3k
        YyCPetK28KPeXMV94muv7Uu4iHigC7LW3bn7kfcjJ+ZyT06VRGlSSRLp9vJ5eq6HdG6s2f5FmicsQpI/
        gKs0ZI6Fc47EAut42t7BT/b2nalpJUDc8tuZYc+0ke5cfXFWovGvhmZAyeINKwega7RT+ROao6N4huru
        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
        ooA//9k=
</value>
  </data>
</root>